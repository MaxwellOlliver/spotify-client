[{"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\App.tsx":"1","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\WrapContainer.tsx":"2","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\theme\\index.ts":"3","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\styles.ts":"4","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\global\\globalStyles.ts":"5","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Player\\index.tsx":"6","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\config\\token.ts":"7","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\index.ts":"8","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\modules\\player\\reducer.ts":"9","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\modules\\player\\actions.ts":"10","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\routes.tsx":"11","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\Home\\index.tsx":"12","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\routes.js":"13","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Controllers\\styles.ts":"14","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Controllers\\index.tsx":"15","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\index.tsx":"16","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\Home\\styles.ts":"17","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Playlist\\index.tsx":"18","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\services\\spotifyApi.ts":"19","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Playlist\\styles.ts":"20"},{"size":356,"mtime":1608240680109,"results":"21","hashOfConfig":"22"},{"size":2344,"mtime":1609611405483,"results":"23","hashOfConfig":"22"},{"size":202,"mtime":1608146661748,"results":"24","hashOfConfig":"22"},{"size":6609,"mtime":1609688736842,"results":"25","hashOfConfig":"22"},{"size":901,"mtime":1609688555529,"results":"26","hashOfConfig":"22"},{"size":5951,"mtime":1609688272341,"results":"27","hashOfConfig":"22"},{"size":346,"mtime":1609690626207,"results":"28","hashOfConfig":"22"},{"size":149,"mtime":1608240680051,"results":"29","hashOfConfig":"22"},{"size":1389,"mtime":1608332380393,"results":"30","hashOfConfig":"22"},{"size":377,"mtime":1608320640125,"results":"31","hashOfConfig":"22"},{"size":219,"mtime":1608311442769,"results":"32","hashOfConfig":"22"},{"size":3413,"mtime":1609692444403,"results":"33","hashOfConfig":"22"},{"size":298,"mtime":1608311767741,"results":"34","hashOfConfig":"22"},{"size":4804,"mtime":1608326764825,"results":"35","hashOfConfig":"22"},{"size":7837,"mtime":1608322847289,"results":"36","hashOfConfig":"22"},{"size":197,"mtime":1608145654990,"results":"37","hashOfConfig":"22"},{"size":2521,"mtime":1609692372742,"results":"38","hashOfConfig":"22"},{"size":1186,"mtime":1609691494198,"results":"39","hashOfConfig":"22"},{"size":233,"mtime":1608154320523,"results":"40","hashOfConfig":"22"},{"size":1377,"mtime":1609690685800,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4hjqni",{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\App.tsx",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\WrapContainer.tsx",["87","88","89"],"import { useEffect, useState } from 'react';\r\nimport {\r\n  FiClock,\r\n  FiHome,\r\n  FiPlay,\r\n  FiPlus,\r\n  FiSkipBack,\r\n  FiSkipForward,\r\n  FiStar,\r\n} from 'react-icons/fi';\r\n\r\nimport { Container } from './styles';\r\nimport logo from '../../assets/logo.png';\r\nimport Player from '../../components/Player';\r\nimport { Spotify } from '../../services/spotifyApi';\r\nimport Routes from './routes';\r\nimport Controllers from '../../components/Controllers';\r\n\r\nconst WrapContainer: React.FC = () => {\r\n  const [user, setUser] = useState<any>(null);\r\n  const [playlists, setPlaylists] = useState([]);\r\n\r\n  const getResources = async () => {\r\n    const { data: user }: any = await Spotify({\r\n      method: 'get',\r\n      url: '/me',\r\n    });\r\n\r\n    const { data: playlists }: any = await Spotify({\r\n      method: 'get',\r\n      url: `/users/${user?.id}/playlists`,\r\n    });\r\n\r\n    console.log(playlists);\r\n\r\n    setPlaylists(playlists.items);\r\n    setUser(user);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getResources();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <aside>\r\n        <img src={logo} alt=\"logo-spotify\" />\r\n        <a href=\"http://\" className=\"focused\">\r\n          <FiHome size={18} color=\"#fff\" />\r\n          <span>início</span>\r\n        </a>\r\n        <a href=\"http://\">\r\n          <FiClock size={18} color=\"#fff\" />\r\n          <span>tocadas recentemente</span>\r\n        </a>\r\n        <a href=\"http://\">\r\n          <FiStar size={18} color=\"#fff\" />\r\n          <span>músicas curtidas</span>\r\n        </a>\r\n        <div>\r\n          <span>playlists</span>\r\n          <FiPlus color=\"#fff\" size={18} />\r\n        </div>\r\n        <ul className=\"playlists\">\r\n          {playlists.map((playlist: any) => (\r\n            <li key={playlist.id}>\r\n              <span>{playlist.name}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <Player />\r\n      </aside>\r\n      <div className=\"right-side\">\r\n        <nav>\r\n          <input type=\"text\" className=\"search\" placeholder=\"Pesquisar...\" />\r\n          <div className=\"profile\">\r\n            <img src={user?.images[0]?.url} alt=\"profile\" />\r\n            <span>{user?.display_name}</span>\r\n          </div>\r\n        </nav>\r\n        <div className=\"content\">\r\n          <Controllers />\r\n          <Routes />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WrapContainer;\r\n",["90","91"],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\theme\\index.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\styles.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\global\\globalStyles.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Player\\index.tsx",["92","93","94"],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\config\\token.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\index.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\modules\\player\\reducer.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\modules\\player\\actions.ts",[],["95","96"],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\routes.tsx",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\routes.js",[],["97","98"],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Controllers\\styles.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Controllers\\index.tsx",["99"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  FiAirplay,\r\n  FiMusic,\r\n  FiTablet,\r\n  FiVolume1,\r\n  FiVolume2,\r\n  FiVolumeX,\r\n} from 'react-icons/fi';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Spotify } from '../../services/spotifyApi';\r\nimport { PlayerAction } from '../../store/modules/player/actions';\r\n\r\nimport desktop from '../../assets/desktop.png';\r\n\r\nimport { Container } from './styles';\r\nimport { BiDesktop } from 'react-icons/bi';\r\nimport { AiOutlineDesktop } from 'react-icons/ai';\r\n\r\nconst Controllers: React.FC = () => {\r\n  const player: any = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [volumeModal, setVolumeModal] = useState(false);\r\n  const [devicesModal, setDevicesModal] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n\r\n  const fillRef = useRef<HTMLSpanElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  async function setVolume() {\r\n    if (fillRef.current && inputRef.current) {\r\n      fillRef.current.style.width = `${inputRef.current.value}%`;\r\n\r\n      await Spotify({\r\n        method: 'put',\r\n        url: `/me/player/volume?volume_percent=${inputRef.current.value}&device_id=${player.selected_device.id}`,\r\n      });\r\n      dispatch({\r\n        type: PlayerAction.SET_VOLUME,\r\n        payload: {\r\n          volume: inputRef.current.value,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  function openVolumeModal() {\r\n    if (volumeModal) {\r\n      setVolumeModal(false);\r\n    } else {\r\n      setVolumeModal(true);\r\n    }\r\n  }\r\n\r\n  async function openDevicesModal() {\r\n    if (devicesModal) {\r\n      setDevicesModal(false);\r\n    } else {\r\n      const {\r\n        data: { devices },\r\n      }: any = await Spotify({\r\n        method: 'get',\r\n        url: '/me/player/devices',\r\n      });\r\n\r\n      setDevices(devices);\r\n      setDevicesModal(true);\r\n    }\r\n  }\r\n\r\n  async function transferPlayback(device: any) {\r\n    await Spotify({\r\n      method: 'put',\r\n      url: '/me/player',\r\n      data: {\r\n        device_ids: [device.id],\r\n      },\r\n    });\r\n\r\n    setDevices((devicesState: any) => {\r\n      const deviceActive = devicesState.map((d: any) => {\r\n        if (d.id === device.id) {\r\n          d.is_active = true;\r\n\r\n          return d;\r\n        }\r\n\r\n        if (d.id === player.selected_device.id) {\r\n          d.is_active = false;\r\n\r\n          return d;\r\n        }\r\n\r\n        return d;\r\n      });\r\n\r\n      return deviceActive;\r\n    });\r\n\r\n    dispatch({ type: PlayerAction.SET_SELECTED_DEVICE, payload: { device } });\r\n    dispatch({\r\n      type: PlayerAction.SET_VOLUME,\r\n      payload: { volume: device.volume_percent },\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let volume = document.querySelector('.volume');\r\n    let devices = document.querySelector('.devices');\r\n\r\n    document.addEventListener('click', (e: any) => {\r\n      if (volume && !volume.contains(e.target)) {\r\n        setVolumeModal(false);\r\n      }\r\n\r\n      if (devices && !devices.contains(e.target)) {\r\n        setDevicesModal(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      let volume = document.querySelector('.volume');\r\n\r\n      document.removeEventListener('click', (e: any) => {\r\n        if (volume && !volume.contains(e.target)) {\r\n          setVolumeModal(false);\r\n        }\r\n\r\n        if (devices && !devices.contains(e.target)) {\r\n          setDevicesModal(false);\r\n        }\r\n      });\r\n    };\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <div className=\"volume\">\r\n        {player.volume > 50 ? (\r\n          <FiVolume2\r\n            size={20}\r\n            color=\"#fff\"\r\n            title={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? 'Não é possível controlar o volume em aparelhos móveis'\r\n                : ''\r\n            }\r\n            className={\r\n              player.selected_device.type === 'Smartphone' ? 'is-smart' : ''\r\n            }\r\n            onClick={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? () => {}\r\n                : openVolumeModal\r\n            }\r\n          />\r\n        ) : player.volume < 1 ? (\r\n          <FiVolumeX\r\n            size={20}\r\n            color=\"#fff\"\r\n            title={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? 'Não é possível controlar o volume em aparelhos móveis'\r\n                : ''\r\n            }\r\n            className={\r\n              player.selected_device.type === 'Smartphone' ? 'is-smart' : ''\r\n            }\r\n            onClick={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? () => {}\r\n                : openVolumeModal\r\n            }\r\n          />\r\n        ) : (\r\n          <FiVolume1\r\n            size={20}\r\n            color=\"#fff\"\r\n            title={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? 'Não é possível controlar o volume em aparelhos móveis'\r\n                : ''\r\n            }\r\n            className={\r\n              player.selected_device.type === 'Smartphone' ? 'is-smart' : ''\r\n            }\r\n            onClick={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? () => {}\r\n                : openVolumeModal\r\n            }\r\n          />\r\n        )}\r\n        {volumeModal && (\r\n          <div className=\"volume-container\">\r\n            <div className=\"slider-container\">\r\n              <span className=\"bar\">\r\n                <span\r\n                  className=\"fill\"\r\n                  style={{ width: `${player.volume}%` }}\r\n                  ref={fillRef}\r\n                ></span>\r\n              </span>\r\n              <input\r\n                type=\"range\"\r\n                name=\"time\"\r\n                id=\"time\"\r\n                min={0}\r\n                max={100}\r\n                step={1}\r\n                ref={inputRef}\r\n                defaultValue={player.volume}\r\n                onChange={setVolume}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"devices\">\r\n        <FiAirplay size={20} color=\"#fff\" onClick={openDevicesModal} />\r\n\r\n        {devicesModal && (\r\n          <div className=\"devices-container\">\r\n            <h3>Conectar a um dispositivo</h3>\r\n            <img src={desktop} alt=\"desktop\" />\r\n            <ul className=\"devices\">\r\n              <li className=\"active\" key={player?.selected_device.id}>\r\n                {player?.selected_device.type === 'Computer' ? (\r\n                  <AiOutlineDesktop size={30} color=\"#fff\" className=\"fill\" />\r\n                ) : (\r\n                  <FiTablet size={30} color=\"#fff\" />\r\n                )}\r\n\r\n                <div className=\"info\">\r\n                  <h3>Ouvindo em {player?.selected_device.name}</h3>\r\n                  <div>\r\n                    <FiMusic size={14} color=\"#fff\" />\r\n                    <span>Spotify connect</span>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              {devices.map((device: any) => {\r\n                if (!device.is_active) {\r\n                  return (\r\n                    <li\r\n                      key={device.id}\r\n                      onClick={() => transferPlayback(device)}\r\n                    >\r\n                      <FiTablet size={30} color=\"#fff\" />\r\n                      <div className=\"info\">\r\n                        <h3>{device.name}</h3>\r\n                        <div>\r\n                          <FiMusic size={14} color=\"#fff\" />\r\n                          <span>Spotify connect</span>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                }\r\n\r\n                return null;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Controllers;\r\n","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\index.tsx",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\Home\\styles.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Playlist\\index.tsx",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\services\\spotifyApi.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Playlist\\styles.ts",[],{"ruleId":"100","severity":1,"message":"101","line":5,"column":3,"nodeType":"102","messageId":"103","endLine":5,"endColumn":9},{"ruleId":"100","severity":1,"message":"104","line":7,"column":3,"nodeType":"102","messageId":"103","endLine":7,"endColumn":13},{"ruleId":"100","severity":1,"message":"105","line":8,"column":3,"nodeType":"102","messageId":"103","endLine":8,"endColumn":16},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":62,"column":6,"nodeType":"112","endLine":62,"endColumn":8,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":68,"column":6,"nodeType":"112","endLine":68,"endColumn":8,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"116","line":77,"column":6,"nodeType":"112","endLine":77,"endColumn":23,"suggestions":"117"},{"ruleId":"106","replacedBy":"118"},{"ruleId":"108","replacedBy":"119"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"100","severity":1,"message":"120","line":17,"column":10,"nodeType":"102","messageId":"103","endLine":17,"endColumn":19},"@typescript-eslint/no-unused-vars","'FiPlay' is defined but never used.","Identifier","unusedVar","'FiSkipBack' is defined but never used.","'FiSkipForward' is defined but never used.","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getResources'. Either include it or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'getCurrentlyMusic'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has a missing dependency: 'player.music.duration_ms'. Either include it or remove the dependency array.",["125"],["121"],["122"],"'BiDesktop' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [getResources]",{"range":"132","text":"133"},"Update the dependencies array to be: [getCurrentlyMusic]",{"range":"134","text":"135"},"Update the dependencies array to be: [player.music.duration_ms, player.progress]",{"range":"136","text":"137"},[1831,1833],"[getResources]",[1956,1958],"[getCurrentlyMusic]",[2217,2234],"[player.music.duration_ms, player.progress]"]