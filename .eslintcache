[{"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\App.tsx":"1","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\WrapContainer.tsx":"2","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\theme\\index.ts":"3","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\styles.ts":"4","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\global\\globalStyles.ts":"5","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Player\\index.tsx":"6","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\config\\token.ts":"7","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\index.ts":"8","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\modules\\player\\reducer.ts":"9","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\modules\\player\\actions.ts":"10","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\routes.tsx":"11","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\Home\\index.tsx":"12","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\routes.js":"13","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Controllers\\styles.ts":"14","C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Controllers\\index.tsx":"15"},{"size":356,"mtime":1608240680109,"results":"16","hashOfConfig":"17"},{"size":2147,"mtime":1608310999557,"results":"18","hashOfConfig":"17"},{"size":202,"mtime":1608146661748,"results":"19","hashOfConfig":"17"},{"size":6529,"mtime":1608323010493,"results":"20","hashOfConfig":"17"},{"size":719,"mtime":1608248709823,"results":"21","hashOfConfig":"17"},{"size":5822,"mtime":1608333017345,"results":"22","hashOfConfig":"17"},{"size":346,"mtime":1608330054726,"results":"23","hashOfConfig":"17"},{"size":149,"mtime":1608240680051,"results":"24","hashOfConfig":"17"},{"size":1389,"mtime":1608332380393,"results":"25","hashOfConfig":"17"},{"size":417,"mtime":1608249434988,"results":"26","hashOfConfig":"17"},{"size":219,"mtime":1608311442769,"results":"27","hashOfConfig":"17"},{"size":160,"mtime":1608311455183,"results":"28","hashOfConfig":"17"},{"size":298,"mtime":1608311767741,"results":"29","hashOfConfig":"17"},{"size":4804,"mtime":1608326764825,"results":"30","hashOfConfig":"17"},{"size":7837,"mtime":1608322847289,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4hjqni",{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\App.tsx",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\WrapContainer.tsx",["66","67","68"],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\theme\\index.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\styles.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\global\\globalStyles.ts",["69"],"import { createGlobalStyle } from 'styled-components';\r\nimport theme from '../theme';\r\n\r\nexport const Global = createGlobalStyle`\r\n  * {\r\n    padding: 0;\r\n    margin: 0;\r\n    outline: none;\r\n    border: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  html, body, input, button {\r\n    font-family: 'Roboto', Arial, Helvetica, sans-serif;\r\n    color: #fff;\r\n    font-size: 14px;\r\n  }\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 8px;\r\n    border-radius: 8px;\r\n    background: #5f5f6b;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background-color: #40404a;\r\n    border-radius: 8px;\r\n  }\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background-color: #52525e;\r\n  }\r\n`;\r\n",["70","71"],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Player\\index.tsx",["72","73","74","75","76"],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\config\\token.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\index.ts",[],["77","78"],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\modules\\player\\reducer.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\store\\modules\\player\\actions.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\WrapContainer\\routes.tsx",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\routes.js",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Controllers\\styles.ts",[],"C:\\Users\\Suel\\Desktop\\dev\\spotify\\src\\components\\Controllers\\index.tsx",["79"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  FiAirplay,\r\n  FiMusic,\r\n  FiTablet,\r\n  FiVolume1,\r\n  FiVolume2,\r\n  FiVolumeX,\r\n} from 'react-icons/fi';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Spotify } from '../../services/spotifyApi';\r\nimport { PlayerAction } from '../../store/modules/player/actions';\r\n\r\nimport desktop from '../../assets/desktop.png';\r\n\r\nimport { Container } from './styles';\r\nimport { BiDesktop } from 'react-icons/bi';\r\nimport { AiOutlineDesktop } from 'react-icons/ai';\r\n\r\nconst Controllers: React.FC = () => {\r\n  const player: any = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [volumeModal, setVolumeModal] = useState(false);\r\n  const [devicesModal, setDevicesModal] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n\r\n  const fillRef = useRef<HTMLSpanElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  async function setVolume() {\r\n    if (fillRef.current && inputRef.current) {\r\n      fillRef.current.style.width = `${inputRef.current.value}%`;\r\n\r\n      await Spotify({\r\n        method: 'put',\r\n        url: `/me/player/volume?volume_percent=${inputRef.current.value}&device_id=${player.selected_device.id}`,\r\n      });\r\n      dispatch({\r\n        type: PlayerAction.SET_VOLUME,\r\n        payload: {\r\n          volume: inputRef.current.value,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  function openVolumeModal() {\r\n    if (volumeModal) {\r\n      setVolumeModal(false);\r\n    } else {\r\n      setVolumeModal(true);\r\n    }\r\n  }\r\n\r\n  async function openDevicesModal() {\r\n    if (devicesModal) {\r\n      setDevicesModal(false);\r\n    } else {\r\n      const {\r\n        data: { devices },\r\n      }: any = await Spotify({\r\n        method: 'get',\r\n        url: '/me/player/devices',\r\n      });\r\n\r\n      setDevices(devices);\r\n      setDevicesModal(true);\r\n    }\r\n  }\r\n\r\n  async function transferPlayback(device: any) {\r\n    await Spotify({\r\n      method: 'put',\r\n      url: '/me/player',\r\n      data: {\r\n        device_ids: [device.id],\r\n      },\r\n    });\r\n\r\n    setDevices((devicesState: any) => {\r\n      const deviceActive = devicesState.map((d: any) => {\r\n        if (d.id === device.id) {\r\n          d.is_active = true;\r\n\r\n          return d;\r\n        }\r\n\r\n        if (d.id === player.selected_device.id) {\r\n          d.is_active = false;\r\n\r\n          return d;\r\n        }\r\n\r\n        return d;\r\n      });\r\n\r\n      return deviceActive;\r\n    });\r\n\r\n    dispatch({ type: PlayerAction.SET_SELECTED_DEVICE, payload: { device } });\r\n    dispatch({\r\n      type: PlayerAction.SET_VOLUME,\r\n      payload: { volume: device.volume_percent },\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let volume = document.querySelector('.volume');\r\n    let devices = document.querySelector('.devices');\r\n\r\n    document.addEventListener('click', (e: any) => {\r\n      if (volume && !volume.contains(e.target)) {\r\n        setVolumeModal(false);\r\n      }\r\n\r\n      if (devices && !devices.contains(e.target)) {\r\n        setDevicesModal(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      let volume = document.querySelector('.volume');\r\n\r\n      document.removeEventListener('click', (e: any) => {\r\n        if (volume && !volume.contains(e.target)) {\r\n          setVolumeModal(false);\r\n        }\r\n\r\n        if (devices && !devices.contains(e.target)) {\r\n          setDevicesModal(false);\r\n        }\r\n      });\r\n    };\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <div className=\"volume\">\r\n        {player.volume > 50 ? (\r\n          <FiVolume2\r\n            size={20}\r\n            color=\"#fff\"\r\n            title={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? 'Não é possível controlar o volume em aparelhos móveis'\r\n                : ''\r\n            }\r\n            className={\r\n              player.selected_device.type === 'Smartphone' ? 'is-smart' : ''\r\n            }\r\n            onClick={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? () => {}\r\n                : openVolumeModal\r\n            }\r\n          />\r\n        ) : player.volume < 1 ? (\r\n          <FiVolumeX\r\n            size={20}\r\n            color=\"#fff\"\r\n            title={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? 'Não é possível controlar o volume em aparelhos móveis'\r\n                : ''\r\n            }\r\n            className={\r\n              player.selected_device.type === 'Smartphone' ? 'is-smart' : ''\r\n            }\r\n            onClick={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? () => {}\r\n                : openVolumeModal\r\n            }\r\n          />\r\n        ) : (\r\n          <FiVolume1\r\n            size={20}\r\n            color=\"#fff\"\r\n            title={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? 'Não é possível controlar o volume em aparelhos móveis'\r\n                : ''\r\n            }\r\n            className={\r\n              player.selected_device.type === 'Smartphone' ? 'is-smart' : ''\r\n            }\r\n            onClick={\r\n              player.selected_device.type === 'Smartphone'\r\n                ? () => {}\r\n                : openVolumeModal\r\n            }\r\n          />\r\n        )}\r\n        {volumeModal && (\r\n          <div className=\"volume-container\">\r\n            <div className=\"slider-container\">\r\n              <span className=\"bar\">\r\n                <span\r\n                  className=\"fill\"\r\n                  style={{ width: `${player.volume}%` }}\r\n                  ref={fillRef}\r\n                ></span>\r\n              </span>\r\n              <input\r\n                type=\"range\"\r\n                name=\"time\"\r\n                id=\"time\"\r\n                min={0}\r\n                max={100}\r\n                step={1}\r\n                ref={inputRef}\r\n                defaultValue={player.volume}\r\n                onChange={setVolume}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"devices\">\r\n        <FiAirplay size={20} color=\"#fff\" onClick={openDevicesModal} />\r\n\r\n        {devicesModal && (\r\n          <div className=\"devices-container\">\r\n            <h3>Conectar a um dispositivo</h3>\r\n            <img src={desktop} alt=\"desktop\" />\r\n            <ul className=\"devices\">\r\n              <li className=\"active\" key={player?.selected_device.id}>\r\n                {player?.selected_device.type === 'Computer' ? (\r\n                  <AiOutlineDesktop size={30} color=\"#fff\" className=\"fill\" />\r\n                ) : (\r\n                  <FiTablet size={30} color=\"#fff\" />\r\n                )}\r\n\r\n                <div className=\"info\">\r\n                  <h3>Ouvindo em {player?.selected_device.name}</h3>\r\n                  <div>\r\n                    <FiMusic size={14} color=\"#fff\" />\r\n                    <span>Spotify connect</span>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              {devices.map((device: any) => {\r\n                if (!device.is_active) {\r\n                  return (\r\n                    <li\r\n                      key={device.id}\r\n                      onClick={() => transferPlayback(device)}\r\n                    >\r\n                      <FiTablet size={30} color=\"#fff\" />\r\n                      <div className=\"info\">\r\n                        <h3>{device.name}</h3>\r\n                        <div>\r\n                          <FiMusic size={14} color=\"#fff\" />\r\n                          <span>Spotify connect</span>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                }\r\n\r\n                return null;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Controllers;\r\n",{"ruleId":"80","severity":1,"message":"81","line":5,"column":3,"nodeType":"82","messageId":"83","endLine":5,"endColumn":9},{"ruleId":"80","severity":1,"message":"84","line":7,"column":3,"nodeType":"82","messageId":"83","endLine":7,"endColumn":13},{"ruleId":"80","severity":1,"message":"85","line":8,"column":3,"nodeType":"82","messageId":"83","endLine":8,"endColumn":16},{"ruleId":"80","severity":1,"message":"86","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"80","severity":1,"message":"91","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":28},{"ruleId":"80","severity":1,"message":"92","line":1,"column":49,"nodeType":"82","messageId":"83","endLine":1,"endColumn":57},{"ruleId":"93","severity":1,"message":"94","line":62,"column":6,"nodeType":"95","endLine":62,"endColumn":8,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":68,"column":6,"nodeType":"95","endLine":68,"endColumn":8,"suggestions":"98"},{"ruleId":"93","severity":1,"message":"99","line":77,"column":6,"nodeType":"95","endLine":77,"endColumn":23,"suggestions":"100"},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","replacedBy":"102"},{"ruleId":"80","severity":1,"message":"103","line":17,"column":10,"nodeType":"82","messageId":"83","endLine":17,"endColumn":19},"@typescript-eslint/no-unused-vars","'FiPlay' is defined but never used.","Identifier","unusedVar","'FiSkipBack' is defined but never used.","'FiSkipForward' is defined but never used.","'theme' is defined but never used.","no-native-reassign",["104"],"no-negated-in-lhs",["105"],"'useCallback' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getResources'. Either include it or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a missing dependency: 'getCurrentlyMusic'. Either include it or remove the dependency array.",["107"],"React Hook useEffect has a missing dependency: 'player.music.duration_ms'. Either include it or remove the dependency array.",["108"],["104"],["105"],"'BiDesktop' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [getResources]",{"range":"115","text":"116"},"Update the dependencies array to be: [getCurrentlyMusic]",{"range":"117","text":"118"},"Update the dependencies array to be: [player.music.duration_ms, player.progress]",{"range":"119","text":"120"},[1854,1856],"[getResources]",[1979,1981],"[getCurrentlyMusic]",[2240,2257],"[player.music.duration_ms, player.progress]"]